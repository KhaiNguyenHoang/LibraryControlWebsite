using LibaryControlWebsite.Models;
using LibaryControlWebsite.Models.Responsibility;
using LibaryControlWebsite.Models.Service;
using Microsoft.AspNetCore.Authentication.Negotiate;

var builder = WebApplication.CreateBuilder(args);

// **1Ô∏è‚É£ Th√™m d·ªãch v·ª• v√†o container**
builder.Services.AddControllersWithViews();
builder.Services.AddDbContext<LibraryContext>();

// **2Ô∏è‚É£ ƒêƒÉng k√Ω c√°c d·ªãch v·ª• (Dependency Injection)**
builder.Services.AddScoped<IUserService, UserService>();
builder.Services.AddScoped<IBookcopyService, BookcopyService>();
builder.Services.AddScoped<IBookService, BookService>();
builder.Services.AddScoped<IAuthorService, AuthorService>();
builder.Services.AddScoped<IBookreviewService, BookreviewService>();
builder.Services.AddScoped<ILoanService, LoanService>();
builder.Services.AddScoped<ICategoryService, CategoryService>();
builder.Services.AddScoped<IFineService, FineService>();
builder.Services.AddScoped<IRoleService, RoleService>();
builder.Services.AddScoped<IPermissionService, PermissionService>();
builder.Services.AddScoped<IReservationService, ReservationService>();
builder.Services.AddScoped<IWaitlistService, WaitlistService>();

// **3Ô∏è‚É£ C·∫•u h√¨nh x√°c th·ª±c (Authentication)**
builder.Services.AddAuthentication(NegotiateDefaults.AuthenticationScheme)
    .AddNegotiate();

// **4Ô∏è‚É£ C·∫•u h√¨nh quy·ªÅn h·∫°n (Authorization)**
builder.Services.AddAuthorization(options =>
{
    // M·∫∑c ƒë·ªãnh, t·∫•t c·∫£ c√°c request s·∫Ω ƒë∆∞·ª£c x√°c th·ª±c theo ch√≠nh s√°ch m·∫∑c ƒë·ªãnh.
    options.FallbackPolicy = options.DefaultPolicy;
});

// **5Ô∏è‚É£ C·∫•u h√¨nh Session**
builder.Services.AddSession(options =>
{
    options.IdleTimeout = TimeSpan.FromMinutes(30);
    options.Cookie.HttpOnly = true;
    options.Cookie.IsEssential = true;
});

// **6Ô∏è‚É£ B·∫≠t Razor Pages**
builder.Services.AddRazorPages();

var app = builder.Build();

// **7Ô∏è‚É£ C·∫•u h√¨nh middleware**
if (!app.Environment.IsDevelopment())
{
    app.UseExceptionHandler("/Home/Error");
    app.UseHsts();
}

// **8Ô∏è‚É£ Middleware cho session, b·∫£o m·∫≠t v√† static files**
app.UseSession(); // ‚ö† ƒê·∫∑t sau khi ƒë√£ AddSession()
app.UseHttpsRedirection();
app.UseStaticFiles();

// **9Ô∏è‚É£ Middleware cho Authentication v√† Authorization**
app.UseRouting();
app.UseAuthentication(); // ‚úÖ ƒê·∫∑t tr∆∞·ªõc UseAuthorization()
app.UseAuthorization();

// **üîü C·∫•u h√¨nh ƒë·ªãnh tuy·∫øn m·∫∑c ƒë·ªãnh**
app.MapControllerRoute(
    name: "default",
    pattern: "{controller=Auth}/{action=Login}/{id?}");

// **üîö Ch·∫°y ·ª©ng d·ª•ng**
app.Run();
